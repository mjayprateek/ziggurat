name: Ziggurat CI

on:
  push:
    branches:
    tags:

jobs:
  lint_check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: '2.9.1'
      - uses: actions/checkout@v2

      - name: Lint Checks
        run: lein cljfmt check

      - name: Lein Kibit Check
        run: lein kibit

  run_tests_with_kafka_1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: '2.9.1'
      - uses: actions/checkout@v2

      - name: Run Tests on Kafka 1.x
        run: ./bin/run_tests_in_ci.sh
        env:
          KAFKA_VERSION: 1

  run_tests_with_kafka_2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: '2.8.1'
      - uses: actions/checkout@v2

      - name: Run Tests on Kafka 2.x
        run: ./bin/run_tests_in_ci.sh
        env:
          KAFKA_VERSION: 2

  calculate_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: '2.8.1'
      - uses: actions/checkout@v2

      - name: Calculate Coverage
        run: make coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_clojars:
    runs-on: ubuntu-latest
    needs: [lint_check, run_tests_with_kafka_1, run_tests_with_kafka_2, calculate_coverage]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: '2.8.1'
      - uses: actions/checkout@v2

      - name: Deploy to Clojars
        run: lein deploy clojars
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
